arrhenius.fit = function(data,par){
omega = data[,1]
rate.obs = data[,2]
b0 = par[1]
b1 = par[2]
b2 = par[3]
rate.pred = b0 - b2 * exp(b1 * omega)
return(sum((rate.obs-rate.pred)^2))
}
#michaelis menten function
#rate = vmax * conc / (km + conc)
michment.fit = function(data,par){
conc = data[,1]
rate.obs = data[,2]
vmax = par[1]
km = par[2]
off = par[3]
rate.pred = ( (vmax * conc) / (km + conc) ) + off
return(sum((rate.obs-rate.pred)^2))
}
#shell
shell = data[which(data$treatment=='shell.long' | data$treatment=='shell.day'),]
shell.carb.m = carb.m[which(data$treatment=='shell.long' | data$treatment=='shell.day'),]
shell.carb.m$delalk.shell.obs = -shell$delta*shell$h2o.kg/2/shell$duration/shell$wet.wt
shell.carb.m$delalk.shell = -shell$calcdelalk*shell$h2o.kg/2/shell$duration/shell$wet.wt
plot(shell.carb.m$OmegaAragonite,shell.carb.m$delalk.shell.obs,col=as.factor(shell$date.out));abline(h=0,v=1)
plot(shell.carb.m$OmegaCalcite,shell.carb.m$delalk.shell.obs,col=as.factor(shell$date.out));abline(h=0,v=1)
#use long incubation data
sfilt = shell.carb.m[which(shell$treatment=='shell.long' | shell$treatment=='shell.day'),][c(-20,-30,-53,-60,-74,-81,-88,-95),]
#compare different nonlinear fits to dissolution
#exponential
sm01 = lm(log(I(sfilt$delalk.shell.obs+1))~log(sfilt$OmegaAragonite))
diss.exp = exp(sm01$fitted.values)-1
#arrhenius
aopt = optim(fn=arrhenius.fit,par=c(b0=0.0005,b1=-1,b2=0.003),
data=data.frame(cbind(sfilt$OmegaAragonite,sfilt$delalk.shell.obs)))
dat = read.csv('postfilter.csv')
dat = dat[which(is.finite(dat$grosscalc)),]
dat$invh = 1/dat$h
dat$grossnogut = dat$grosscalc*dat$gut.wt
calclabel = expression(paste('Gross Calcification Rate (mmol ',g^-1,' h',r^-1,')'))
bicarblabel = expression(paste(paste("","HCO")[3]^"-",' (mmol k',g^'-1',')'))
omalabel = expression(paste(Omega['aragonite']))
logomalabel = expression(paste('log(',Omega['aragonite'],')'))
phlabel = expression(paste('pH'['total']))
pco2label = expression(paste(pCO[2]))
invphlabel = expression(paste('pH'['total']^-1))
hlabel = expression(paste('[H]'))
invhlabel = expression(paste('[H]'^-1))
sirlabel = expression(paste(paste('SIR ([HCO')[3]^'-','] [H]'^'-1',')'))
n=10
rbPal = colorRampPalette(c('red','blue','green','orange'))
omcol = rbPal(n)[as.numeric(cut(dat$omegaaragonite,breaks=n))]
bicol = rbPal(n)[as.numeric(cut(dat$hco3,breaks=n))]
calccol = rbPal(n)[as.numeric(cut(dat$grosscalc,breaks=n))]
invhcol = rbPal(n)[as.numeric(cut(dat$invh,breaks=n))]
phcol =  rbPal(n)[as.numeric(cut(dat$ph,breaks=n))]
hcol = rbPal(n)[as.numeric(cut(dat$h,breaks=n))]
siz = 1#((dat$grosscalc - min(dat$grosscalc))+10) / max(dat$grosscalc)
se = function(x){y=sd(x)/sqrt(length(x));return(y)}
clus.mean = aggregate(dat,by=list(dat$cluster),FUN=mean)[-1,]
dat = dat[which(complete.cases(dat)),]
dat$invh = 1/dat$h
calclabel = expression(paste('Calcification Rate (mmol ',g^-1,' h',r^-1,')'))
omalabel = expression(paste(Omega['aragonite']))
bicarblabel = expression(paste(paste("","HCO")[3]^"-",' (mmol k',g^'-1',')'))
carblabel = expression(paste(paste("","CO")[3]^"-",' (mmol k',g^'-1',')'))
plot(dat$hco3*10^3,dat$omegaaragonite,col=as.factor(dat$date.cat),ylab=omalabel,xlab=bicarblabel)
library(readxl)
dat = read_xlsx("Desktop/waldbusser_2011_data.xlsx")
View(dat)
n=5
rbPal = colorRampPalette(c('red','blue','green'))
calccol = rbPal(n)[as.numeric(cut(dat$`calc rate`,breaks=n))]
plot(dat$TA ~ dat$sal, pch = 19, col = calccol)
alkcol = rbPal(n)[as.numeric(cut(dat$TA,breaks=n))]
plot(dat$`calc rate` ~ dat$sal, pch = 19, col = alkcol)
n=10
rbPal = colorRampPalette(c('red','blue','green'))
alkcol = rbPal(n)[as.numeric(cut(dat$TA,breaks=n))]
plot(dat$`calc rate` ~ dat$sal, pch = 19, col = alkcol)
plot(dat$TA ~ dat$sal, pch = 19, col = calccol)
plot(dat$TA ~ dat$`pH act`, pch = 19, col = calccol)
plot(dat$`calc rate` ~ dat$`pH act`, pch = 19)
plot(dat$`calc rate` ~ dat$`pH act`, pch = 19, col = alkcol)
n=10
rbPal = colorRampPalette(c('red','blue','green'))
alkcol = rbPal(n)[as.numeric(cut(dat$TA,breaks=n))]
alkcol
plot(dat$`calc rate` ~ dat$TA, pch = 19, col = alkcol)
salcol = rbPal(n)[as.numeric(cut(dat$sal,breaks=n))]
salcol
plot(dat$`calc rate` ~ dat$TA, pch = 19, col = salcol)
dat = read_xlsx("Desktop/waldbusser_2011_data.xlsx")
View(dat)
n=10
alkcol = rbPal(n)[as.numeric(cut(dat$TA,breaks=n))]
library("colorspace", lib.loc="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
rbPal = colorRampPalette(c('red','blue','green'))
alkcol = rbPal(n)[as.numeric(cut(dat$TA,breaks=n))]
salcol = rbPal(n)[as.numeric(cut(dat$sal,breaks=n))]
calccol = rbPal(n)[as.numeric(cut(dat$`calc rate`,breaks=n))]
plot(dat$TA ~ dat$sal, pch = 19, col = calccol)
plot(dat$TA ~ dat$`pH act`, pch = 19, col = calccol)
plot(dat$`calc rate` ~ dat$TA, pch = 19, col = salcol)
plot(dat$`calc rate` ~ dat$sal, pch = 19, col = alkcol)
unique(dat$TA)
alkcol
n=5
rbPal = colorRampPalette(c('red','blue','green'))
calccol = rbPal(n)[as.numeric(cut(dat$`calc rate`,breaks=n))]
alkcol = rbPal(n)[as.numeric(cut(dat$TA,breaks=n))]
salcol = rbPal(n)[as.numeric(cut(dat$sal,breaks=n))]
alkcol
calccol
unique(calccol)
unique(alkcol)
TAcol = rbPal(n)[as.numeric(cut(dat$TA,breaks=n))]
plot(dat$TA ~ dat$sal, pch = 19, col = calccol)
plot(dat$TA ~ dat$sal, pch = 19, col = calccol, xlim = c(16,17))
plot(dat$TA ~ dat$sal, pch = 19, col = calccol, xlim = c(31,33))
plot(dat$TA ~ dat$sal, pch = 19, col = calccol, xlim = c(16,17))
plot(dat$TA ~ dat$sal, pch = 19, col = calccol, xlim = c(16,17), ylim = c(1100,1400))
plot(dat$TA ~ dat$sal, pch = 19, col = calccol, xlim = c(31,33))
plot(dat$TA ~ dat$sal, pch = 19, col = calccol, xlim = c(31,33), ylim = c(2000,2200))
plot(dat$TA ~ dat$sal, pch = 19, col = calccol, xlim = c(15,17), ylim = c(1100,1400))
plot(dat$TA ~ dat$sal, pch = 19, col = calccol, xlim = c(31,33), ylim = c(2000,2200))
dat = read_xlsx("Desktop/waldbusser_2011_data.xlsx")
library("openxlsx", lib.loc="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
dat = read_xlsx("Desktop/waldbusser_2011_data.xlsx")
library(readxlsx)
library(readxl)
dat = read_xlsx("Desktop/waldbusser_2011_data.xlsx")
View(dat)
n=5
rbPal = colorRampPalette(c('red','blue','green'))
calccol = rbPal(n)[as.numeric(cut(dat$`calc rate`,breaks=n))]
alkcol = rbPal(n)[as.numeric(cut(dat$TA,breaks=n))]
salcol = rbPal(n)[as.numeric(cut(dat$sal,breaks=n))]
plot(dat$TA ~ dat$sal, pch = 19, col = calccol, xlim = c(15,17), ylim = c(1100,1400))
plot(dat$TA ~ dat$sal, pch = 19, col = calccol, xlim = c(31,33), ylim = c(2000,2200))
plot(dat$TA ~ dat$`pH act`, pch = 19, col = calccol)
plot(dat$`calc rate` ~ dat$TA, pch = 19, col = salcol)
plot(dat$`calc rate` ~ dat$sal, pch = 19, col = alkcol)
n=100
alkcol = rbPal(n)[as.numeric(cut(dat$TA,breaks=n))]
plot(dat$`calc rate` ~ dat$sal, pch = 19, col = alkcol)
n=3
alkcol = rbPal(n)[as.numeric(cut(dat$TA,breaks=n))]
plot(dat$`calc rate` ~ dat$sal, pch = 19, col = alkcol)
plot(dat$TA ~ dat$sal, pch = 19, col = calccol)
plot(dat$`calc rate` ~ dat$TA, pch = 19, col = salcol)
plot(dat$TA ~ dat$sal, pch = 19, col = calccol)
plot(dat$`calc rate` ~ dat$sal, pch = 19, col = alkcol)
plot(dat$`calc rate` ~ dat$TA, pch = 19, col = salcol)
plot(dat$TA ~ dat$sal, pch = 19, col = calccol)
plot(dat$TA ~ dat$sal, pch = 19, col = calccol, xlim = c(15,17), ylim = c(1100,1400))
plot(dat$TA ~ dat$sal, pch = 19, col = calccol, xlim = c(31,33), ylim = c(2000,2200))
plot(dat$TA ~ dat$sal, pch = 19, col = calccol, xlim = c(31,33), ylim = c(1800,2200))
plot(dat$TA ~ dat$sal, pch = 19, col = calccol)
dat$Fsal = as.factor(dat$sal)
plot(dat$TA ~ dat$Fsal, pch = 19, col = calccol)
points(dat$TA ~ dat$Fsal, pch = 19, col = calccol)
plot(dat$TA ~ dat$Fsal, pch = 19, col = calccol, bty = "n")
plot(dat$TA ~ dat$Fsal, pch = 19, col = calccol, bty = "n")
plot(dat$TA ~ dat$Fsal, pch = 19, bty = "n")
points(dat$TA ~ dat$Fsal, pch = 19, col = calccol)
calclabel = expression(paste('Gross Calcification Rate (mg CaCO3 ',g^-1,' F.W. hr',r^-1,')'))
plot(x,y)
par(new=T) #start a new plotting canvas but stay on the current plot
legend_image=as.raster(matrix(rbPal(20),nrow=1)) #makes the bar but doesn’t draw it yet
plot(1:10,1:10,type='n',axes=FALSE,xlab='',ylab='') #make an invisible plot with easy numbers to work with
text(x=seq(4.5,9.5,l=5),y=1.75,labels=round(seq(min(na.omit(dat$`calc rate`)),max(na.omit(dat$`calc rate`)),l=5),3),cex=0.75) #bar labels
rasterImage(legend_image,4,1,10,1.5) #x1,y1,x2,y2 of bar
text(7,1.75,labels=calclabel,pos=3,adj=0.5) #title of bar
text(x=seq(4.5,9.5,l=5),y=3,labels=round(seq(min(na.omit(dat$`calc rate`)),
max(na.omit(dat$`calc rate`)),l=5),3),cex=0.75) #bar labels
rasterImage(legend_image,4,1,10,1.5) #x1,y1,x2,y2 of bar
rasterImage(legend_image,4,1,10,3) #x1,y1,x2,y2 of bar
text(x=seq(4.5,9.5,l=5),y=4,labels=round(seq(min(na.omit(dat$`calc rate`)),
max(na.omit(dat$`calc rate`)),l=5),3),cex=0.75) #bar labels
plot(dat$TA ~ dat$sal, pch = 19, col = calccol, xlim = c(31,33), ylim = c(1800,2200))
dat$Fsal = as.factor(dat$sal)
plot(dat$TA ~ dat$Fsal, pch = 19, bty = "n")
points(dat$TA ~ dat$sal, pch = 19, col = calccol)
par(new=T) #start a new plotting canvas but stay on the current plot
legend_image=as.raster(matrix(rbPal(20),nrow=1)) #makes the bar but doesn’t draw it yet
plot(1:10,1:10,type='n',axes=FALSE,xlab='',ylab='') #make an invisible plot with easy numbers to work with
text(x=seq(4.5,9.5,l=5),y=4,labels=round(seq(min(na.omit(dat$`calc rate`)),
max(na.omit(dat$`calc rate`)),l=5),3),cex=0.75) #bar labels
rasterImage(legend_image,4,3.25,10,3.75) #x1,y1,x2,y2 of bar
text(7,4.1,labels=calclabel,pos=3,adj=0.5) #title of bar
calclabel = expression(paste('Gross Calcification Rate (mg CaCO3 ',g^-1,' F.W. h',r^-1,')'))
bicarblabel = expression(paste(paste("","HCO")[3]^"-",' (mmol k',g^'-1',')'))
ubicarblabel = expression(paste(paste("","HCO")[3]^"-",' (',mu,'mol k',g^'-1',')'))
par(new=T) #start a new plotting canvas but stay on the current plot
legend_image=as.raster(matrix(rbPal(20),nrow=1)) #makes the bar but doesn’t draw it yet
plot(1:10,1:10,type='n',axes=FALSE,xlab='',ylab='') #make an invisible plot with easy numbers to work with
text(x=seq(4.5,9.5,l=5),y=4,labels=round(seq(min(na.omit(dat$`calc rate`)),
max(na.omit(dat$`calc rate`)),l=5),3),cex=0.75) #bar labels
rasterImage(legend_image,4,3.25,10,3.75) #x1,y1,x2,y2 of bar
text(7,4.1,labels=calclabel,pos=3,adj=0.5) #title of bar
calclabel = expression(paste('Calcification Rate (mg CaCO3 ',g^-1,' F.W. h',r^-1,')'))
points(dat$TA ~ dat$sal, pch = 19, col = calccol)
par(new=T) #start a new plotting canvas but stay on the current plot
legend_image=as.raster(matrix(rbPal(20),nrow=1)) #makes the bar but doesn’t draw it yet
plot(1:10,1:10,type='n',axes=FALSE,xlab='',ylab='') #make an invisible plot with easy numbers to work with
text(x=seq(4.5,9.5,l=5),y=4,labels=round(seq(min(na.omit(dat$`calc rate`)),
max(na.omit(dat$`calc rate`)),l=5),3),cex=0.75) #bar labels
rasterImage(legend_image,4,3.25,10,3.75) #x1,y1,x2,y2 of bar
text(7,4.1,labels=calclabel,pos=3,adj=0.5) #title of bar
points(dat$TA ~ dat$sal, pch = 19, col = calccol)
plot(dat$TA ~ dat$Fsal, pch = 19, bty = "n")
par(new=T) #start a new plotting canvas but stay on the current plot
legend_image=as.raster(matrix(rbPal(20),nrow=1)) #makes the bar but doesn’t draw it yet
plot(1:10,1:10,type='n',axes=FALSE,xlab='',ylab='') #make an invisible plot with easy numbers to work with
text(x=seq(4.5,9.5,l=5),y=4,labels=round(seq(min(na.omit(dat$`calc rate`)),
max(na.omit(dat$`calc rate`)),l=5),3),cex=0.75) #bar labels
rasterImage(legend_image,4,3.25,10,3.75) #x1,y1,x2,y2 of bar
text(7,4.1,labels=calclabel,pos=3,adj=0.5) #title of bar
plot(dat$TA ~ dat$Fsal, pch = 19, bty = "n")
par(new=T) #start a new plotting canvas but stay on the current plot
legend_image=as.raster(matrix(rbPal(20),nrow=1)) #makes the bar but doesn’t draw it yet
plot(1:10,1:10,type='n',axes=FALSE,xlab='',ylab='') #make an invisible plot with easy numbers to work with
text(x=seq(4.5,9.5,l=5),y=4,labels=round(seq(min(na.omit(dat$`calc rate`)),
max(na.omit(dat$`calc rate`)),l=5),3),cex=1) #bar labels
rasterImage(legend_image,4,3.25,10,3.75) #x1,y1,x2,y2 of bar
text(7,4.1,labels=calclabel,pos=3,adj=0.5) #title of bar
points(dat$TA ~ dat$sal, pch = 19, col = calccol)
plot(dat$TA ~ dat$Fsal, pch = 19, bty = "n")
points(dat$TA ~ dat$sal, pch = 19, col = calccol)
plot(dat$`calc rate` ~ dat$Fsal, pch = 19, col = alkcol)
points(dat$TA ~ dat$sal, pch = 19, col = calccol)
plot(dat$TA ~ dat$Fsal, pch = 19, bty = "n")
points(dat$TA ~ dat$sal, pch = 19, col = calccol)
points(dat$TA ~ dat$Fsal, pch = 19, col = calccol)
par(new=T) #start a new plotting canvas but stay on the current plot
legend_image=as.raster(matrix(rbPal(20),nrow=1)) #makes the bar but doesn’t draw it yet
plot(1:10,1:10,type='n',axes=FALSE,xlab='',ylab='') #make an invisible plot with easy numbers to work with
text(x=seq(4.5,9.5,l=5),y=4,labels=round(seq(min(na.omit(dat$`calc rate`)),
max(na.omit(dat$`calc rate`)),l=5),3),cex=1) #bar labels
rasterImage(legend_image,4,3.25,10,3.75) #x1,y1,x2,y2 of bar
text(7,4.1,labels=calclabel,pos=3,adj=0.5) #title of bar
plot(dat$TA ~ dat$Fsal, pch = 19, bty = "n")
points(dat$TA ~ dat$Fsal, pch = 19, col = calccol)
par(new=T) #start a new plotting canvas but stay on the current plot
legend_image=as.raster(matrix(rbPal(20),nrow=1)) #makes the bar but doesn’t draw it yet
plot(1:10,1:10,type='n',axes=FALSE,xlab='',ylab='') #make an invisible plot with easy numbers to work with
text(x=seq(2.5,7.5,l=5),y=4,labels=round(seq(min(na.omit(dat$`calc rate`)),
max(na.omit(dat$`calc rate`)),l=5),3),cex=1) #bar labels
rasterImage(legend_image,2,3.25,8,3.75) #x1,y1,x2,y2 of bar
text(5,4.1,labels=calclabel,pos=3,adj=0.5) #title of bar
plot(dat$TA ~ dat$Fsal, pch = 19, bty = "n")
points(dat$TA ~ dat$Fsal, pch = 19, col = calccol)
par(new=T) #start a new plotting canvas but stay on the current plot
legend_image=as.raster(matrix(rbPal(20),nrow=1)) #makes the bar but doesn’t draw it yet
plot(1:10,1:10,type='n',axes=FALSE,xlab='',ylab='') #make an invisible plot with easy numbers to work with
text(x=seq(3,8,l=5),y=4,labels=round(seq(min(na.omit(dat$`calc rate`)),
max(na.omit(dat$`calc rate`)),l=5),3),cex=1) #bar labels
rasterImage(legend_image,2.5,3.25,8.5,3.75) #x1,y1,x2,y2 of bar
text(5.5,4.1,labels=calclabel,pos=3,adj=0.5) #title of bar
data = as.data.frame(read_xlsx('/Users/alishamsaley/Documents/GitHub/TF_CP3/FullData_corrected.xlsx'))
library(git2r)
library(nlme)
library(lme4)
library(emmeans)
library(MuMIn)
library(dplyr) #create new dataframe
library(tidyr) #create new dataframe
#library(jtools)
library(readxl) #read in excel files
library(fitdistrplus) #helps pick distribution of data with descdist() argument
library(glmmML) #for choosing which model to start with
getwd()
setwd("/Users/alishamsaley/Documents/GitHub/TF_CP3/")
###blah blah lbah test
data = as.data.frame(read_xlsx('/Users/alishamsaley/Documents/GitHub/TF_CP3/FullData_corrected.xlsx'))
summary(data$pH_ave)
unique(data$acc_tank)
unique(data$bin)
unique(data$acclim)
data = data[data$ind != 7 & data$ind != 192 & data$ind != 193 & data$ind != 194 & data$ind != 195 & data$ind != 39 & data$ind != 50 & data$ind != 67 & data$ind != 148 & data$ind != 205 & data$ind != 37 & data$ind != 79 & data$ind != 18 & data$ind != 188 & data$ind != 138 & data$ind != 140 & data$ind != 225 & data$ind != 128 & data$ind != 186 & data$ind != 17,] #ind 186 and 17 are maybes
data$treatment[data$treatment == "no cue"] = 0
data$treatment[data$treatment == "pisaster" ] = 1
data$treatment[data$treatment == "crab"] = 2
data$treatment = as.numeric(data$treatment)
data$ind = as.factor(data$ind)
d1 = as.data.frame(data%>% group_by(ind) %>% dplyr::summarise(trial = mean(Trial_main), arena = mean(bin), accbin = mean(acclim), pH = mean(pH_round), cue = mean(treatment), P_in1 = sum(in_out)/n(), P_in2 = sum(in_out2)/n(), In1 = sum(in_out), In2 = sum(in_out2), Total = length(ind), Out1 = Total - In1, Out2 = Total - In2, P_out1 = 1-P_in1, P_out2 = 1-P_in2, Corner = sum(corner), Not_cor = Total - Corner, Wall = sum(wall), Not_wall = Total - Wall, Bottom = sum(bottom), Not_bot = Total - Bottom, P_cor = sum(corner)/Total, P_wall = sum(wall)/Total, P_bot = sum(Bottom)/Total))
d1$cue[d1$cue == "0"] = "no cue"
d1$cue[d1$cue == "1"] = "pisaster"
d1$cue[d1$cue == "2"] = "crab"
d1$trial = as.factor(d1$trial)
d1$accbin = as.factor(d1$accbin)
d1$cue = as.factor(d1$cue)
d1 = as.data.frame(data%>% group_by(ind) %>% dplyr::summarise(trial = mean(Trial_main), arena = mean(bin), accbin = mean(acclim), pH = mean(pH_round), cue = mean(treatment), P_in1 = sum(in_out)/n(), P_in2 = sum(in_out2)/n(), In1 = sum(in_out), In2 = sum(in_out2), Total = length(ind), Out1 = Total - In1, Out2 = Total - In2, P_out1 = 1-P_in1, P_out2 = 1-P_in2, Corner = sum(corner), Not_cor = Total - Corner, Wall = sum(wall), Not_wall = Total - Wall, Bottom = sum(bottom), Not_bot = Total - Bottom, P_cor = sum(corner)/Total, P_wall = sum(wall)/Total, P_bot = sum(Bottom)/Total))
data$pH_round = round(x = data$pH_ave, digits = 2)
data$treatment[data$treatment == "carb"] = "crab"
unique(data$treatment)
data$pH_round = round(x = data$pH_ave, digits = 2)
data = data[data$ind != 7 & data$ind != 192 & data$ind != 193 & data$ind != 194 & data$ind != 195 & data$ind != 39 & data$ind != 50 & data$ind != 67 & data$ind != 148 & data$ind != 205 & data$ind != 37 & data$ind != 79 & data$ind != 18 & data$ind != 188 & data$ind != 138 & data$ind != 140 & data$ind != 225 & data$ind != 128 & data$ind != 186 & data$ind != 17,] #ind 186 and 17 are maybes
View(data)
data$treatment[data$treatment == "no cue"] = 0
data$treatment[data$treatment == "pisaster" ] = 1
data$treatment[data$treatment == "crab"] = 2
data$treatment = as.numeric(data$treatment)
data$ind = as.factor(data$ind)
d1 = as.data.frame(data%>% group_by(ind) %>% dplyr::summarise(trial = mean(Trial_main), arena = mean(bin), accbin = mean(acclim), pH = mean(pH_round), cue = mean(treatment), P_in1 = sum(in_out)/n(), P_in2 = sum(in_out2)/n(), In1 = sum(in_out), In2 = sum(in_out2), Total = length(ind), Out1 = Total - In1, Out2 = Total - In2, P_out1 = 1-P_in1, P_out2 = 1-P_in2, Corner = sum(corner), Not_cor = Total - Corner, Wall = sum(wall), Not_wall = Total - Wall, Bottom = sum(bottom), Not_bot = Total - Bottom, P_cor = sum(corner)/Total, P_wall = sum(wall)/Total, P_bot = sum(Bottom)/Total))
d1$cue[d1$cue == "0"] = "no cue"
d1$cue[d1$cue == "1"] = "pisaster"
d1$cue[d1$cue == "2"] = "crab"
d1$trial = as.factor(d1$trial)
d1$accbin = as.factor(d1$accbin)
d1$cue = as.factor(d1$cue)
unique(d1$accbin)
plot(d1$pH ~ d1$accbin)
unique(d1$ind)
plot(d1$pH ~ d1$accbin, pch = 19, col = 'black')
plot(d1$pH ~ d1$accbin, pch = 19, col = 'black', xlab = "acclimation bin", ylab = "pH Total scale")
plot(d1$pH ~ d1$accbin, pch = 19, col = 'black', xlab = "acclimation bin", ylab = "pH Total scale", bty = "n")
plot(d1$pH ~ d1$accbin, pch = 19, col = 'black', xlab = "acclimation bin", ylab = "pH Total scale", bty = "none")
plot(d1$pH ~ d1$accbin, pch = 21, col = 'black', xlab = "acclimation bin", ylab = "pH Total scale")
plot(d1$pH ~ d1$accbin, pch = 21, col = 'black', ylab = "pH Total scale")
plot(d1$pH ~ d1$accbin, pch = 19,cex = 2, col = 'black', xlab = "acclimation bin", ylab = "pH Total scale")
plot(d1$pH ~ d1$accbin, pch = 19,cex = 4, col = 'black', xlab = "acclimation bin", ylab = "pH Total scale")
plot(d1$pH ~ d1$accbin, pch = 19,cex = 4, col = 'black', xlab = "acclimation bin", ylab = "pH Total scale")
plot(pH ~ accbin, data = d1, pch = 19,cex = 4, col = 'black', xlab = "acclimation bin", ylab = "pH Total scale")
plot(pH ~ accbin, data = d1, pch = 19,cex = 5, col = 'black', xlab = "acclimation bin", ylab = "pH Total scale")
plot(pH ~ accbin, data = d1, pch = 19,cex = 5, col = 'black', xlab = "acclimation bin", ylab = "pH Total scale")
plot(pH ~ accbin, data = d1, pch = 19,cex = 5, col = 'black', xlab = "acclimation bin", ylab = "pH Total scale")
plot(pH ~ accbin, data = d1, pch = 19,cex.lab = 5, col = 'black', xlab = "acclimation bin", ylab = "pH Total scale")
plot(pH ~ accbin, data = d1, pch = 19,cex.lab = 2, col = 'black', xlab = "acclimation bin", ylab = "pH Total scale")
plot(pH ~ accbin, data = d1, pch = 19,cex.lab = 1, col = 'black', xlab = "acclimation bin", ylab = "pH Total scale")
points(pH ~ accbin, data = d1, pch = 19,cex = 2, col = 'black')
plot(pH ~ accbin, data = d1, pch = 19,cex.lab = 1, col = 'black', xlab = "acclimation bin", ylab = "pH Total scale")
points(pH ~ accbin, data = d1, pch = 19,cex = 1.5, col = 'black')
library(lme4) #lme model
library(emmeans) #tukey posthoc...well it is supposed to be
library(readxl)
library(dplyr) #create new dataaframe
library(tidyr) #create new dataaframe
library(seacarb)
#######for overlaying on maps
require(parsedatae)
require(ggplot2)
require(RColorBrewer)
require(reshape2)
require(maps) #The maps package contains a lot of outlines of continents, countries, states, and counties that have been with R for a long time. The mapdataa package contains a few more, higher-resolution outlines. The maps package comes with a plotting function
require(mapdataa)
require(devtools)
library(rerddap)
library(rerddapXtracto) #not available for this version of R
library(readxl)
devtools::install_github("dkahle/ggmap")
library(ggmap)
library(oce)
library(ocedata)
assign('last.warning', NULL, envir = baseenv()) #erases all old warning codes that you didn't view/fix
```{r}
high = 4000
med = 2100
low = 500
dei = 0
riv = c(high,med,low,dei)
n = 10
perc.mix = c(0:n)/n #could also use seq(), which gives you more control, however, a lot more to type in.
data = expand.grid(perc.mix = perc.mix, riv = riv)
data$SWalk = 2100
data$temp = 13
data$SWpco2 = 450
data$FWpco2 = 450
data$SWsal = 34
data$FWsal= 0
data$SWdic = carb(flag = 24, var1 = data$SWpco2, var2 = data$SWalk/10^6, T = data$temp, S = data$SWsal)$DIC #the final $DIC tells seacarb to pull just the DIC column
data$FWdic = carb(flag = 24, var1 = data$FWpco2, var2 = data$riv/10^6, T = data$temp, S = data$FWsal)$DIC
data$mix.dic = (data$SWdic * (1-data$perc.mix))+(data$FWdic * (perc.mix))
data$mix.sal = (data$SWsal * (1-data$perc.mix))+(data$FWsal * (perc.mix))
data$mix.alk = (data$SWalk * (1-data$perc.mix))+(data$riv * (perc.mix))
data$FWca2 = (133 + 0.13*(data$riv))/(rho(S = data$FWsal, T = data$temp)/10^3) #NEED TO: figure out which paper to cite here?
data$SWca2 = (10300/35*34) #from beckwith 2019
data$mix.ca2 = (data$SWca2 * (1-data$perc.mix))+(data$FWca2 * (perc.mix))
data$mix.carb = carb(flag = 15, var1 = data$mix.alk/10^6, var2 = data$mix.dic, T = data$temp, S = data$mix.sal)
data$omega.arag = (data$mix.ca2/10^6)*(data$mix.carb$CO3)/Kspa(S = data$mix.sal, T = data$temp )
data20 = data[data$mix.sal > 19.99,]
data$rivfact = as.factor(data$riv)
plot(data$mix.alk/1000 ~ data$mix.sal, pch = 19, col = data$rivfact)
data3$rivfact = as.factor(data3$riv)
z = seq(from = 0, to = 35, by = 1)
q = seq(from = 0, to, = 4, by = 0.5)
q = seq(from = 0, to = 4, by = 0.5)
try = as.data.frame(x = z, y = q, row.names = F)
try = as.data.frame(x = z, y = q)
View(try)
try = data.frame(z,q)
try = expand.gred(q,z)
try = expand.grid(q,z)
View(try)
points(Var1~Var2, data = try)
q = seq(from = 0, to = 4, by = 0.05)
try = expand.grid(q,z)
points(Var1~Var2, data = try)
plot(data$mix.alk/1000 ~ data$mix.sal, pch = 19, col = data$rivfact)
z = seq(from = 0, to = 35, by = 1)
q = seq(from = 0, to = 4, by = 0.1)
try = expand.grid(q,z)
points(Var1~Var2, data = try)
q = seq(from = 0, to = 4, by = 0.2)
try = expand.grid(q,z)
points(Var1~Var2, data = try)
plot(data$mix.alk/1000 ~ data$mix.sal, pch = 19, col = data$rivfact)
z = seq(from = 0, to = 35, by = 1)
q = seq(from = 0, to = 4, by = 0.2)
try = expand.grid(q,z)
points(Var1~Var2, data = try)
points(Var1~Var2, data = try, pch = ".")
plot(data$mix.alk/1000 ~ data$mix.sal, pch = 19, col = data$rivfact)
z = seq(from = 0, to = 35, by = 1)
q = seq(from = 0, to = 4, by = 0.2)
try = expand.grid(q,z)
points(Var1~Var2, data = try, pch = ".")
points(Var1~Var2, data = try, pch = 19, cex = .5)
plot(data$mix.alk/1000 ~ data$mix.sal, pch = 19, col = data$rivfact)
z = seq(from = 0, to = 35, by = 1)
q = seq(from = 0, to = 4, by = 0.2)
try = expand.grid(q,z)
points(Var1~Var2, data = try, pch = 19, cex = .25)
points(Var1~Var2, data = try, pch = 19, cex = .25, col = "grey")
plot(data$mix.alk/1000 ~ data$mix.sal, pch = 19, col = data$rivfact, xlim = c(20,35))
z = seq(from = 0, to = 35, by = 1)
q = seq(from = 0, to = 4, by = 0.2)
try = expand.grid(q,z)
points(Var1~Var2, data = try, pch = 19, cex = .25, col = "grey")
z = seq(from = 0, to = 35, by = .5)
q = seq(from = 0, to = 4, by = 0.2)
try = expand.grid(q,z)
points(Var1~Var2, data = try, pch = 19, cex = .25, col = "grey")
plot(data$mix.alk/1000 ~ data$mix.sal, pch = 19, col = data$rivfact, xlim = c(20,35), ylim = c(1,3))
z = seq(from = 0, to = 35, by = .5)
q = seq(from = 0, to = 4, by = 0.2)
try = expand.grid(q,z)
points(Var1~Var2, data = try, pch = 19, cex = .25, col = "grey")
lines(data$mix.alk/1000 ~ data$mix.sal, pch = 19, col = data$rivfact, xlim = c(20,35), ylim = c(1,3))
points(Var1~Var2, data = try, pch = 19, cex = .25, col = "dark grey")
lines(data$mix.alk/1000 ~ data$mix.sal, pch = 19, col = data$rivfact, xlim = c(20,35), ylim = c(1,3))
plot(data$mix.alk/1000 ~ data$mix.sal, pch = 19, col = data$rivfact, xlim = c(20,35), ylim = c(1,3))
z = seq(from = 0, to = 35, by = .5)
q = seq(from = 0, to = 4, by = 0.2)
try = expand.grid(q,z)
points(Var1~Var2, data = try, pch = 19, cex = .25, col = "dark grey")
legend('topright',legend= c('high', 'control', 'low', 'distilled'), pch=19,col=data$rivfact,cex=0.75)
legend('topright',legend= c('high', 'control', 'low', 'distilled'), pch=19,col=as.factory(data$rivfact),cex=0.75)
legend('topright',legend= c('high', 'control', 'low', 'distilled'), pch=19,col=c('blue', 'green', 'red', 'black'),cex=0.75)
plot(data$mix.alk/1000 ~ data$mix.sal, pch = 19, col = c('blue', 'green', 'red', 'black'), xlim = c(20,35), ylim = c(1,3))
plot(data$mix.alk/1000 ~ data$mix.sal, pch = 19, col = data$rivfact, xlim = c(20,35), ylim = c(1,3))
z = seq(from = 0, to = 35, by = .5)
q = seq(from = 0, to = 4, by = 0.2)
try = expand.grid(q,z)
points(Var1~Var2, data = try, pch = 19, cex = .25, col = "dark grey")
legend('topright',legend= c('high', 'control', 'low', 'distilled'), pch=19,col=c('blue', 'green', 'red', 'black'),cex=0.75)
plot(data$mix.alk ~ data$mix.sal, pch = 19, col = data$rivfact, xlim = c(20,35), ylim = c(1,3))
plot(data$mix.alk ~ data$mix.sal, pch = 19, col = data$rivfact, xlim = c(20,35), ylim = c(1000,3000))
z = seq(from = 0, to = 35, by = .5)
q = seq(from = 0, to = 4, by = 0.2)
try = expand.grid(q,z)
points(Var1~Var2, data = try, pch = 19, cex = .25, col = "dark grey")
q = seq(from = 0, to = 4000, by = 200)
try = expand.grid(q,z)
points(Var1~Var2, data = try, pch = 19, cex = .25, col = "dark grey")
legend('topright',legend= c('high', 'control', 'low', 'distilled'), pch=19,col=c('blue', 'green', 'red', 'black'),cex=0.75)
plot(data$mix.alk ~ data$mix.sal, pch = 19, col = data$rivfact, xlim = c(20,35), ylim = c(1000,3000), xlab = "Salinity", ylab = "Alkalinity umol/kg")
z = seq(from = 0, to = 35, by = .5)
q = seq(from = 0, to = 4000, by = 200)
try = expand.grid(q,z)
points(Var1~Var2, data = try, pch = 19, cex = .25, col = "dark grey")
points(Var1~Var2, data = try, pch = 19, cex = .3, col = "dark grey")
z = seq(from = 0, to = 35, by = .35)
q = seq(from = 0, to = 4000, by = 200)
try = expand.grid(q,z)
q = seq(from = 0, to = 4000, by = 150)
try = expand.grid(q,z)
points(Var1~Var2, data = try, pch = 19, cex = .3, col = "dark grey")
plot(data$mix.alk ~ data$mix.sal, pch = 19, col = data$rivfact, xlim = c(20,35), ylim = c(1000,3000), xlab = "Salinity", ylab = "Alkalinity umol/kg")
z = seq(from = 0, to = 35, by = .35)
q = seq(from = 0, to = 4000, by = 150)
try = expand.grid(q,z)
points(Var1~Var2, data = try, pch = 19, cex = .3, col = "dark grey")
legend('topright',legend= c('high', 'control', 'low', 'distilled'), pch=19,col=c('blue', 'green', 'red', 'black'),cex=0.75)
plot(data$mix.alk ~ data$mix.sal, pch = 19, col = data$rivfact, xlim = c(20,35), ylim = c(1000,3000), xlab = "Salinity", ylab = "Alkalinity umol/kg")
z = seq(from = 0, to = 35, by = .5)
q = seq(from = 0, to = 4000, by = 300)
try = expand.grid(q,z)
points(Var1~Var2, data = try, pch = 19, cex = .3, col = "dark grey")
plot(data$mix.alk ~ data$mix.sal, pch = 19, col = data$rivfact, xlim = c(20,35), ylim = c(1000,3000), xlab = "Salinity", ylab = "Alkalinity umol/kg")
z = seq(from = 0, to = 35, by = 1)
q = seq(from = 0, to = 4000, by = 300)
try = expand.grid(q,z)
points(Var1~Var2, data = try, pch = 19, cex = .3, col = "dark grey")
legend('topright',legend= c('high', 'control', 'low', 'distilled'), pch=19,col=c('blue', 'green', 'red', 'black'),cex=0.75)
q = seq(from = 1000, to = 4000, by = 300)
try = expand.grid(q,z)
points(Var1~Var2, data = try, pch = 19, cex = .3, col = "dark grey")
plot(data$mix.alk ~ data$mix.sal, pch = 19, col = data$rivfact, xlim = c(20,35), ylim = c(1000,3000), xlab = "Salinity", ylab = "Alkalinity umol/kg")
z = seq(from = 0, to = 35, by = 1)
q = seq(from = 0, to = 4000, by = 300)
try = expand.grid(q,z)
points(Var1~Var2, data = try, pch = 19, cex = .3, col = "dark grey")
legend('topright',legend= c('high', 'control', 'low', 'distilled'), pch=19,col=c('blue', 'green', 'red', 'black'),cex=0.75)
plot(data$mix.alk ~ data$mix.sal, pch = 19, col = data$rivfact, xlim = c(20,35), ylim = c(1000,3000), xlab = "Salinity", ylab = "Alkalinity umol/kg")
z = seq(from = 0, to = 35, by = 1)
q = seq(from = 0, to = 4000, by = 300)
try = expand.grid(q,z)
points(Var1~Var2, data = try, pch = 19, cex = .3, col = "dark grey")
legend('topright',legend= c('high', 'control', 'low', 'distilled'), pch=19,col=c('blue', 'green', 'red', 'black'),cex=0.75)
